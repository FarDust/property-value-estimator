"""Add raw data tables

Revision ID: 420ad0b696c9
Revises: 
Create Date: 2025-09-12 14:04:28.915482

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '420ad0b696c9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('raw_future_house_examples',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Auto-generated ID'),
    sa.Column('bedrooms', sa.Integer(), nullable=False, comment='Number of bedrooms'),
    sa.Column('bathrooms', sa.Float(), nullable=False, comment='Number of bathrooms'),
    sa.Column('sqft_living', sa.Integer(), nullable=False, comment='Square feet of living space'),
    sa.Column('sqft_lot', sa.Integer(), nullable=False, comment='Square feet of lot'),
    sa.Column('floors', sa.Float(), nullable=False, comment='Number of floors'),
    sa.Column('waterfront', sa.Integer(), nullable=False, comment='Waterfront property (0/1)'),
    sa.Column('view', sa.Integer(), nullable=False, comment='View quality (0-4)'),
    sa.Column('condition', sa.Integer(), nullable=False, comment='Property condition (1-5)'),
    sa.Column('grade', sa.Integer(), nullable=False, comment='Building grade (1-13)'),
    sa.Column('sqft_above', sa.Integer(), nullable=False, comment='Square feet above ground'),
    sa.Column('sqft_basement', sa.Integer(), nullable=False, comment='Square feet of basement'),
    sa.Column('yr_built', sa.Integer(), nullable=False, comment='Year built'),
    sa.Column('yr_renovated', sa.Integer(), nullable=False, comment='Year renovated (0 if never)'),
    sa.Column('zipcode', sa.String(length=10), nullable=False, comment='ZIP code'),
    sa.Column('lat', sa.Float(), nullable=False, comment='Latitude'),
    sa.Column('long', sa.Float(), nullable=False, comment='Longitude'),
    sa.Column('sqft_living15', sa.Integer(), nullable=False, comment='Avg sqft living of 15 nearest neighbors'),
    sa.Column('sqft_lot15', sa.Integer(), nullable=False, comment='Avg sqft lot of 15 nearest neighbors'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('raw_house_sales',
    sa.Column('id', sa.Integer(), nullable=False, comment='Property ID - can have multiple sales'),
    sa.Column('date', sa.DateTime(), nullable=False, comment='Sale date'),
    sa.Column('price', sa.Float(), nullable=False, comment='Sale price'),
    sa.Column('bedrooms', sa.Integer(), nullable=False, comment='Number of bedrooms'),
    sa.Column('bathrooms', sa.Float(), nullable=False, comment='Number of bathrooms'),
    sa.Column('sqft_living', sa.Integer(), nullable=False, comment='Square feet of living space'),
    sa.Column('sqft_lot', sa.Integer(), nullable=False, comment='Square feet of lot'),
    sa.Column('floors', sa.Float(), nullable=False, comment='Number of floors'),
    sa.Column('waterfront', sa.Integer(), nullable=False, comment='Waterfront property (0/1)'),
    sa.Column('view', sa.Integer(), nullable=False, comment='View quality (0-4)'),
    sa.Column('condition', sa.Integer(), nullable=False, comment='Property condition (1-5)'),
    sa.Column('grade', sa.Integer(), nullable=False, comment='Building grade (1-13)'),
    sa.Column('sqft_above', sa.Integer(), nullable=False, comment='Square feet above ground'),
    sa.Column('sqft_basement', sa.Integer(), nullable=False, comment='Square feet of basement'),
    sa.Column('yr_built', sa.Integer(), nullable=False, comment='Year built'),
    sa.Column('yr_renovated', sa.Integer(), nullable=False, comment='Year renovated (0 if never)'),
    sa.Column('zipcode', sa.String(length=10), nullable=False, comment='ZIP code'),
    sa.Column('lat', sa.Float(), nullable=False, comment='Latitude'),
    sa.Column('long', sa.Float(), nullable=False, comment='Longitude'),
    sa.Column('sqft_living15', sa.Integer(), nullable=False, comment='Avg sqft living of 15 nearest neighbors'),
    sa.Column('sqft_lot15', sa.Integer(), nullable=False, comment='Avg sqft lot of 15 nearest neighbors'),
    sa.PrimaryKeyConstraint('id', 'date', name='pk_raw_house_sales')
    )
    op.create_table('raw_zipcode_demographics',
    sa.Column('zipcode', sa.String(length=10), nullable=False, comment='ZIP code'),
    sa.Column('ppltn_qty', sa.Float(), nullable=True, comment='Total population quantity'),
    sa.Column('urbn_ppltn_qty', sa.Float(), nullable=True, comment='Urban population quantity'),
    sa.Column('sbrbn_ppltn_qty', sa.Float(), nullable=True, comment='Suburban population quantity'),
    sa.Column('farm_ppltn_qty', sa.Float(), nullable=True, comment='Farm population quantity'),
    sa.Column('non_farm_qty', sa.Float(), nullable=True, comment='Non-farm population quantity'),
    sa.Column('medn_hshld_incm_amt', sa.Float(), nullable=True, comment='Median household income amount'),
    sa.Column('medn_incm_per_prsn_amt', sa.Float(), nullable=True, comment='Median income per person amount'),
    sa.Column('hous_val_amt', sa.Float(), nullable=True, comment='Housing value amount'),
    sa.Column('edctn_less_than_9_qty', sa.Float(), nullable=True, comment='Education less than 9 years quantity'),
    sa.Column('edctn_9_12_qty', sa.Float(), nullable=True, comment='Education 9-12 years quantity'),
    sa.Column('edctn_high_schl_qty', sa.Float(), nullable=True, comment='High school education quantity'),
    sa.Column('edctn_some_clg_qty', sa.Float(), nullable=True, comment='Some college education quantity'),
    sa.Column('edctn_assoc_dgre_qty', sa.Float(), nullable=True, comment='Associate degree quantity'),
    sa.Column('edctn_bchlr_dgre_qty', sa.Float(), nullable=True, comment='Bachelor degree quantity'),
    sa.Column('edctn_prfsnl_qty', sa.Float(), nullable=True, comment='Professional degree quantity'),
    sa.Column('per_urbn', sa.Float(), nullable=True, comment='Percentage urban'),
    sa.Column('per_sbrbn', sa.Float(), nullable=True, comment='Percentage suburban'),
    sa.Column('per_farm', sa.Float(), nullable=True, comment='Percentage farm'),
    sa.Column('per_non_farm', sa.Float(), nullable=True, comment='Percentage non-farm'),
    sa.Column('per_less_than_9', sa.Float(), nullable=True, comment='Percentage education less than 9 years'),
    sa.Column('per_9_to_12', sa.Float(), nullable=True, comment='Percentage education 9-12 years'),
    sa.Column('per_hsd', sa.Float(), nullable=True, comment='Percentage high school'),
    sa.Column('per_some_clg', sa.Float(), nullable=True, comment='Percentage some college'),
    sa.Column('per_assoc', sa.Float(), nullable=True, comment='Percentage associate degree'),
    sa.Column('per_bchlr', sa.Float(), nullable=True, comment='Percentage bachelor degree'),
    sa.Column('per_prfsnl', sa.Float(), nullable=True, comment='Percentage professional degree'),
    sa.PrimaryKeyConstraint('zipcode')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('raw_zipcode_demographics')
    op.drop_table('raw_house_sales')
    op.drop_table('raw_future_house_examples')
    # ### end Alembic commands ###
